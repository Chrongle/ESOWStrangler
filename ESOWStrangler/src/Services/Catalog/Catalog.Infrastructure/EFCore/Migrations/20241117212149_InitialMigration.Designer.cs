// <auto-generated />
using System;
using Catalog.Infrastructure.EFCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catalog.Infrastructure.EFCore.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    [Migration("20241117212149_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Catalog.Core.Entities.CatalogBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "Azure"
                        },
                        new
                        {
                            Id = 2,
                            BrandName = ".NET"
                        },
                        new
                        {
                            Id = 3,
                            BrandName = "Visual Studio"
                        },
                        new
                        {
                            Id = 4,
                            BrandName = "SQL Server"
                        },
                        new
                        {
                            Id = 5,
                            BrandName = "Other"
                        });
                });

            modelBuilder.Entity("Catalog.Core.Entities.CatalogItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CatalogBrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CatalogTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("CatalogItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CatalogBrandId = 2,
                            CatalogTypeId = 2,
                            Description = ".NET Bot Black Sweatshirt",
                            Name = ".NET Bot Black Sweatshirt",
                            PictureUri = "http://catalogbaseurltobereplaced/images/products/1.png",
                            Price = 19.5m
                        },
                        new
                        {
                            Id = 2,
                            CatalogBrandId = 2,
                            CatalogTypeId = 1,
                            Description = ".NET Black & White Mug",
                            Name = ".NET Black & White Mug",
                            PictureUri = "http://catalogbaseurltobereplaced/images/products/2.png",
                            Price = 8.50m
                        },
                        new
                        {
                            Id = 3,
                            CatalogBrandId = 5,
                            CatalogTypeId = 2,
                            Description = "Prism White T-Shirt",
                            Name = "Prism White T-Shirt",
                            PictureUri = "http://catalogbaseurltobereplaced/images/products/3.png",
                            Price = 12m
                        },
                        new
                        {
                            Id = 4,
                            CatalogBrandId = 2,
                            CatalogTypeId = 2,
                            Description = ".NET Foundation Sweatshirt",
                            Name = ".NET Foundation Sweatshirt",
                            PictureUri = "http://catalogbaseurltobereplaced/images/products/4.png",
                            Price = 12m
                        },
                        new
                        {
                            Id = 5,
                            CatalogBrandId = 5,
                            CatalogTypeId = 3,
                            Description = "Roslyn Red Sheet",
                            Name = "Roslyn Red Sheet",
                            PictureUri = "http://catalogbaseurltobereplaced/images/products/5.png",
                            Price = 8.5m
                        },
                        new
                        {
                            Id = 6,
                            CatalogBrandId = 2,
                            CatalogTypeId = 2,
                            Description = ".NET Blue Sweatshirt",
                            Name = ".NET Blue Sweatshirt",
                            PictureUri = "http://catalogbaseurltobereplaced/images/products/6.png",
                            Price = 12m
                        },
                        new
                        {
                            Id = 7,
                            CatalogBrandId = 5,
                            CatalogTypeId = 2,
                            Description = "Roslyn Red T-Shirt",
                            Name = "Roslyn Red T-Shirt",
                            PictureUri = "http://catalogbaseurltobereplaced/images/products/7.png",
                            Price = 12m
                        },
                        new
                        {
                            Id = 8,
                            CatalogBrandId = 5,
                            CatalogTypeId = 1,
                            Description = "Kudu Purple Sweatshirt",
                            Name = "Kudu Purple Sweatshirt",
                            PictureUri = "http://catalogbaseurltobereplaced/images/products/8.png",
                            Price = 8.5m
                        },
                        new
                        {
                            Id = 9,
                            CatalogBrandId = 5,
                            CatalogTypeId = 3,
                            Description = "Cup<T> White Mug",
                            Name = "Cup<T> White Mug",
                            PictureUri = "http://catalogbaseurltobereplaced/images/products/9.png",
                            Price = 12m
                        },
                        new
                        {
                            Id = 10,
                            CatalogBrandId = 2,
                            CatalogTypeId = 3,
                            Description = ".NET Foundation Sheet",
                            Name = ".NET Foundation Sheet",
                            PictureUri = "http://catalogbaseurltobereplaced/images/products/10.png",
                            Price = 12m
                        },
                        new
                        {
                            Id = 11,
                            CatalogBrandId = 2,
                            CatalogTypeId = 3,
                            Description = "Cup<T> Sheet",
                            Name = "Cup<T> Sheet",
                            PictureUri = "http://catalogbaseurltobereplaced/images/products/11.png",
                            Price = 8.5m
                        },
                        new
                        {
                            Id = 12,
                            CatalogBrandId = 5,
                            CatalogTypeId = 2,
                            Description = "Prism White TShirt",
                            Name = "Prism White TShirt",
                            PictureUri = "http://catalogbaseurltobereplaced/images/products/12.png",
                            Price = 12m
                        });
                });

            modelBuilder.Entity("Catalog.Core.Entities.CatalogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CatalogTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Mug"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "T-Shirt"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Sheet"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "USB Memory Stick"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
